#: Environment varaibles for applications respecting XDG specifications {{{

export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_STATE_HOME="$HOME/.local/state"
export XDG_DATA_HOME="$HOME/.local/share"

#: }}}

#: GnuPG home {{{

export GNUPGHOME="$HOME/.config/gnupg"

#: }}}

#: Homebrew {{{

if [[ -x /opt/homebrew/bin/brew ]]; then
    eval "$(/opt/homebrew/bin/brew shellenv)"
elif [[ -x /usr/local/bin/brew ]]; then
    eval "$(/usr/local/bin/brew shellenv)"
elif [[ -x /home/linuxbrew/.linuxbrew/bin/brew ]]; then
    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

#: }}}

#: Pyenv {{{

eval "$(pyenv init -)"

#: }}}

#: PowerShell {{{

export POWERSHELL_UPDATECHECK=Off
export POWERSHELL_TELEMETRY_OPTOUT=1

#: }}}

#: AWS {{{

#: Workaround to move AWS config to XDG_CONFIG_HOME until this issue is fixed:
#: https://github.com/aws/aws-sdk/issues/30
export AWS_CONFIG_FILE="$XDG_CONFIG_HOME/aws/config"
export AWS_CLI_HISTORY_FILE="$XDG_CONFIG_HOME/aws/history"
export AWS_CREDENTIALS_FILE="$XDG_CONFIG_HOME/aws/credentials"
#: For some reason Terraform doesn't like the `AWS_WEB_IDENTITY_TOKEN_FILE`
#: variable, causing it to throw this: `WebIdentityErr: role ARN is not set`
#: so you'd better not export it if not necessary.
# export AWS_WEB_IDENTITY_TOKEN_FILE="$XDG_CONFIG_HOME/aws/token"
export AWS_SHARED_CREDENTIALS_FILE="$XDG_CONFIG_HOME/aws/shared-credentials"

#: }}}
